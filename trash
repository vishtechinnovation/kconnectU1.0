<form
    id="earlySignupForm"
    method="POST"
    onsubmit="return handleFormSubmit(event)">
    <!-- First Name -->
    <div class="mb-4">
        <label class="block text-gray-700">First Name</label>
        <input
            name="entry.137930516"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded"
            placeholder="John" />
    </div>

    <!-- Last Name -->
    <div class="mb-4">
        <label class="block text-gray-700">Last Name</label>
        <input
            name="entry.365860481"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded"
            placeholder="Doe" />
    </div>

    <!-- Email Address -->
    <div class="mb-4">
        <label class="block text-gray-700">Email Address</label>
        <input
            name="entry.1596585368"
            type="email"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded"
            placeholder="you@example.com" />
    </div>

    <!-- Phone Number -->
    <div class="mb-4">
        <label class="block text-gray-700">Phone Number</label>
        <input
            name="entry.1599107456"
            type="tel"
            required
            pattern="^\+?\d{9,15}$"
            title="Enter a valid phone number with country code"
            class="w-full px-3 py-2 border border-gray-300 rounded"
            placeholder="+234 812 345 6789" />
    </div>

    <!-- Location -->
    <div class="mb-4">
        <label class="block text-gray-700">Location</label>
        <input
            name="entry.344818518"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded"
            placeholder="Lagos, Nigeria" />
    </div>

    <!-- Profession -->
    <div class="mb-4">
        <label class="block text-gray-700">What’s Your Profession?</label>
        <input
            name="entry.1088893444"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded"
            placeholder="Software Developer" />
    </div>
    <!-- Invisible reCAPTCHA -->
    <div
        class="g-recaptcha"
        data-sitekey="6Lf291YrAAAAAIfhw5tCQkAz42ij_GqfAFZbxw4t"></div>

    <!-- Submit -->
    <button
        type="submit"
        class="w-full bg-yellow-500 text-white py-2 rounded font-semibold cursor-pointer">
        Submit
    </button>
    <!-- Success Message -->
    <!-- <div
                        id="signupSuccessMessage"
                        class="hidden opacity-0 transition-opacity duration-700 mt-4 flex justify-between items-center bg-yellow-500 text-green-700 px-4 py-2 rounded shadow text-sm font-medium">
                        <span
                            >✅ Thank you! Your sign-up has been received.</span
                        >
                        <button
                            onclick="closeSuccessMessage()"
                            class="ml-4 font-bold text-green-800 hover:text-red-500 focus:outline-none text-lg leading-none">
                            ✖
                        </button>
                    </div> -->
</form>
<!-- Success/Error Message -->
<div id="message" class="mt-4"></div>

// Handle Form Submission // function handleFormSubmit(event) { //
event.preventDefault(); // // Ensure that reCAPTCHA is checked before form
submission // var recaptchaResponse = document.getElementById( //
"g-recaptcha-response" // ).value; // if (!recaptchaResponse) { // alert("Please
verify that you are not a robot."); // return false; // Prevent form submission
if reCAPTCHA is not checked // } // // Get the form data // var form =
document.getElementById("earlySignupForm"); // var formData = new
FormData(form); // // Send the form data to Google Apps Script // fetch( //
"https://script.google.com/macros/s/AKfycbxOELSjFwM7PzpDcp9GHnAiRvtLZq8KFGQhnh5nyGzo8qmA3ew2ItDEkdcAe2fVqt-mzA/exec",
// { // method: "POST", // body: formData, // } // ) // .then((response) =>
response.json()) // .then((data) => { // // Handle success (email verification
and other actions) // alert( // "Form submitted successfully! Please check your
email to verify." // ); // }) // .catch((error) => { // alert("There was an
error submitting the form. Please try again."); // console.error(error); // });
// return false; // Prevent traditional form submission // } // // Example for
email verification - Simulate the email verification link. // const urlParams =
new URLSearchParams(window.location.search); // const codeFromUrl =
urlParams.get("code"); // Get code from URL // const storedCode = "w3ymfvsxwjs";
// Replace with actual stored code (e.g., from Google Sheets) // if
(codeFromUrl) { // document.getElementById("message").innerHTML = ` //
<p class="text-center text-gray-600">
    Email verification link received. Please enter the code below to verify your
    email.
</p>
//
<div class="mb-4">
    // <input type="text" id="verificationCode" placeholder="Enter your
    verification code" required // class="w-full px-4 py-2 border
    border-gray-300 rounded-md focus:outline-none focus:ring-2
    focus:ring-blue-500 focus:border-blue-500 text-gray-800"> //
</div>
//
<button
    onclick="verifyEmail()"
    class="w-full bg-blue-500 text-white py-2 rounded-md font-semibold hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">
    // Verify Email //
</button>
// `; // } // // Verify Email Logic // function verifyEmail() { // const
userCode = document.getElementById("verificationCode").value; // if (userCode
=== storedCode) { // document.getElementById( // "message" // ).innerHTML = `
<div class="bg-green-500 text-white p-3 rounded-md text-center">
    Your email has been successfully verified!
</div>
`; // } else { // document.getElementById( // "message" // ).innerHTML = `
<div class="bg-red-500 text-white p-3 rounded-md text-center">
    Invalid verification code. Please try again.
</div>
`; // } // } // New approach function handleFormSubmit(event) { // Ensure that
reCAPTCHA is checked before form submission var recaptchaResponse =
document.getElementById( "g-recaptcha-response" ).value; if (!recaptchaResponse)
{ alert("Please verify that you are not a robot."); return false; // Prevent
form submission if reCAPTCHA is not checked } // Prevent the form submission
(we'll handle this with fetch) event.preventDefault(); // Get the form data var
form = document.getElementById("earlySignupForm"); var formData = new
FormData(form); // Send the form data to Google Apps Script to store temporarily
(not yet submitted to Google Forms) fetch(
"https://script.google.com/macros/s/AKfycbxOELSjFwM7PzpDcp9GHnAiRvtLZq8KFGQhnh5nyGzo8qmA3ew2ItDEkdcAe2fVqt-mzA/exec",
{ method: "POST", body: formData, } ) .then((response) => response.json())
.then((data) => { // Handle success: Email verification sent, and data stored
temporarily alert( "Please check your email to verify and complete your
submission." ); location.reload(); // This reloads the current page after the
process }) .catch((error) => { alert("There was an error submitting the form.
Please try again."); console.error(error); }); return false; // Return false to
prevent the form from submitting traditionally } //
---------------------------------------------------------------------- function
doGet(e) { const codeFromUrl = e.parameter.code; // Get code from URL const
sheet =
SpreadsheetApp.getActiveSpreadsheet().getSheetByName('VerificationCodes'); const
data = sheet.getDataRange().getValues(); // Check if the code exists in the
Google Sheets let isValidCode = false; for (let i = 0; i < data.length; i++) {
if (data[i][1] === codeFromUrl) { // Assuming the second column has the stored
verification code isValidCode = true; break; } } if (isValidCode) { // If the
code is valid, return a success HTML message return
HtmlService.createHtmlOutput(`
<html>
    <head>
        <title>Email Verified</title>
    </head>
    <body>
        <h2>Your email has been successfully verified!</h2>
        <p>You will be redirected to the homepage shortly.</p>
        <script>
            setTimeout(function () {
                window.location.href = "https://kconnect-u1-0.vercel.app/"; // Redirect to homepage
            }, 3000); // 3 seconds delay before redirecting
        </script>
    </body>
</html>
`); } else { // If the code is invalid, return an error message return
HtmlService.createHtmlOutput(`
<html>
    <head>
        <title>Invalid Code</title>
    </head>
    <body>
        <h2>Invalid or Expired Verification Code</h2>
        <p>Please try again.</p>
    </body>
</html>
`); } } function doPost(e) { const responses = e.parameter; // Extract the form
fields const firstName = responses['entry.137930516']; const lastName =
responses['entry.365860481']; const email = responses['entry.1596585368']; const
phone = responses['entry.1599107456']; const location =
responses['entry.344818518']; const profession = responses['entry.1088893444'];
const recaptchaResponse = responses['g-recaptcha-response']; //
------------------------------ // Verify reCAPTCHA Response //
------------------------------ const secretKey =
"6Lf291YrAAAAAFLzntU_vlxcOFUP60W"; // Use your actual secret key from reCAPTCHA
const verificationUrl = "https://www.google.com/recaptcha/api/siteverify"; const
options = { "method": "post", "payload": { "secret": secretKey, "response":
recaptchaResponse } }; const response = UrlFetchApp.fetch(verificationUrl,
options); const json = JSON.parse(response.getContentText()); if (!json.success)
{ return ContentService.createTextOutput(JSON.stringify({ status: 'reCAPTCHA
failed' })) .setMimeType(ContentService.MimeType.JSON); } //
------------------------------ // Generate Email Verification Link //
------------------------------ const verificationCode =
Math.random().toString(36).substring(2, 15); // Generate a random verification
code const verifyEmailUrl =
"https://kconnect-u1-0.vercel.app/verify-email.html?code=" + verificationCode;
// const verifyEmailUrl =
"https://kconnect-u1-0.vercel.app/verify-email.html?code=" + verificationCode;
// Store the verification code for later use storeVerificationCode(email,
verificationCode); // Send the verification email to the user const userSubject
= "KonnectU Solutions - Email Verification"; const userHtml = `
<div style="font-family: Arial, sans-serif; max-width: 600px; margin: auto">
    <h2 style="color: #333">Please Verify Your Email Address</h2>
    <p>Dear <strong>${firstName.toUpperCase()}</strong>,</p>
    <p>
        Thank you for your submission. Please verify your email address by
        clicking the link below:
    </p>
    <p>
        <a href="${verifyEmailUrl}">Click here to verify your email address</a>
    </p>
    <p>If you did not submit this form, please disregard this email.</p>
    <p>Best regards,<br />The KonnectU Solutions Team</p>
</div>
`; GmailApp.sendEmail(email, userSubject, "", { htmlBody: userHtml }); //
------------------------------ // Store form data temporarily until verification
is done storeFormDataTemporarily(firstName, lastName, email, phone, location,
profession); return ContentService.createTextOutput(JSON.stringify({ status:
'success' })).setMimeType(ContentService.MimeType.JSON); } // Temporarily store
form data until verification is complete function
storeFormDataTemporarily(firstName, lastName, email, phone, location,
profession) { // Access the active Google Sheet const sheet =
SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Temporary SignUp Data');
// Make sure this sheet exists // If the sheet doesn't exist, you'll need to
create it manually in Google Sheets if (!sheet) { throw new Error("Temporary
SignUp Data sheet not found."); } // Append the data to the sheet
sheet.appendRow([firstName, lastName, email, phone, location, profession, new
Date()]); } // Store verification code for later use (for validation in
verify-email.html) function storeVerificationCode(email, verificationCode) {
const sheet =
SpreadsheetApp.getActiveSpreadsheet().getSheetByName('VerificationCodes');
sheet.appendRow([email, verificationCode, new Date()]); } function
sendToGoogleForms(firstName, lastName, email, phone, location, profession,
timestamp) { var formUrl =
"https://docs.google.com/forms/u/0/d/e/1FAIpQLSdrkRnL6L05367s0bYG6WJimzEsmDH7hHcOaZHiozdZCPbCTQ/formResponse";
var payload = { "entry.137930516": firstName, "entry.365860481": lastName,
"entry.1596585368": email, "entry.1599107456": phone, "entry.344818518":
location, "entry.1088893444": profession, }; var options = { "method": "post",
"payload": payload }; UrlFetchApp.fetch(formUrl, options); // Submit data to
Google Forms }
